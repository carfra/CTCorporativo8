# Automatically generated on 2020-12-16 UTC from https://codemagic.io/app/5fa31373d9ef1387743aebab/settings
# Note that this configuration is not an exact match to UI settings. Review and adjust as necessary.
#
#  author: Carlos Franco
#  date:   Diciembre 16 de 2020
#
workflows:
  ctcorporativo1:
    name: CTCorporativo1
    max_build_duration: 60
    environment:
      vars:
        FCI_CERTIFICATE: Encrypted(Z0FBQUFBQmYyb2l6Sm92UmRXLXAwU3g5MExLdEFpVXRKRWpWQ0JCTzBtM3FnQnZINUdCQU1iNFFaMTlKUW83UEQ5cjlWYUo0T28zMTNpRmYyZU51c0tsbTgtTGY3NG9mcVBBdTJfVHJXV3hFUlE1OTN1ejJwLTlWeDY0RmVwTHo1RTVaNktaQWRKWHlqUG4zX1VSUFlETWtIR2ltQ2xRV25YX0Zjc1FPYTFfUUp0ZkZqVHVEODF3TGtrUlRGNHh0ODFoZEJUQ0VVRTlxRGNITWRId2l0OXdDamRjblhTbHVjd3hlZmpZbmRnQXNLX19rcU85OGtnTTAxRHQ4amNMUWYyazhubjFGdzVkbUNhWW9MRFpPa2htczFKR05YdDN2Z09obmtpdEtTUVJqWm5ycUVGRmhFcFhuMnppeFZDWFZEeW1VY0RjMExGYTlMd3Q0aVRrQmtqWnlKc3lJU1ZHNllYb19SempZbEhsc3FkOEhxOUhwNFpETVp3WjZzS1o5MW4wMktHVWx2dE5jN0NpeEV6N293b2dBTXQyTUhEakxUMnBiTEdQNndqa05tVVpsd2tpd003dlE3OTRQWjd2bS1tbUdHZGk4Z1MtQXhhemF2VW95UUtjU1dTakxzUGtQSUxzdU5yZzctWTFQT2xqZ0ViQm0xY29rTEljTkY5MmZvQVpCRTBLY1FIZEo3NGFGVVdyNTNTN0hvRWtlQ1dtbG1rWVRyZV9TcHBRb1ptcXhXTnBURV9jOFRxbTBaZmlMVGZhVHJnUElKVGExVDhmTGV3NGxiM18zMkQxM05ObFROSHpfN2xsSWJpY0ZieWU4aWl0WnF1MXkxQWdReWRUdDZ2NkNjb19oalpQVkF0RlZ2cXRBOHlGSmhEN1EtaUZHSWFsR0ktSTc4RTJaUHI5c1dQWGNFRHpqMzJoYUZOR3RDS1lWQ2NmQ0NMZzNHQ2N4R2haOWxzd1AyNW56RFMzTm05dm5mOUxRb0U1Qzh5UTlaX3Y0TnhpbUc4clUwR3JRdzdFa2NrS21tR0xpVmloUWlTZ3p4ZVBYblhCb3hxU1hySDNZemdYM2d6Z0JYUG8td2xjbm9BN3NXc0JnR2RaLS1raThVM2U3TmFGN1YyWXJtWFJURGcwalFRX0RWdzlKTi1JSjNWTUNMSWFmTldMYVdOWGtzZU1DWXBYeUI4ckxRdk9nOXZMUENSRkxJU0ZBby1jOExNbElORGZDSlhaUm15U0gxZlFvZXc4TU9TN3p3djhxNzV5VUNDTEgwMm4ySG83cWJpR3JiYTNaMDBSYzdKLVA1SW5vWmQ0RmJzWXlqclVPWjBFZDJPaWRGUlN4NGdPbGxKajlZWFJGUURaNFEweUIzN0hxblE4Z1pXVXRlVUxvc2tOSE1Eb1JqX0tzM2NZVlN2ZkQyenNiQjZQLThZTjREWEJYLWRUVmpKVzlwR3d3aGVncm5QeFh4Vk5GVUR5N2FFbmJEN3VVdW1hVkhjNEdXS0FXUkt1cUlpVy01QjFBNmFsRFJ6Vll2ek1lV3Z2cExtMUREV3BGQllETWljZnNmSk5SX0dZOC1fSEFkNEt2cGpiS29NODI1T3NOa1JjcDV6S0lkTTRxWDZkWkxpR2swTlk1OXZsb08tTEJmUGlsY1l5b3JKMDBIU3FqTlNyQVBuSUFSQmJTbmdMTGVRTTJJRUlFcVdpV3R4UlJWLWh2eDhzUlR2TWhoem4zNTl1M1BZc3hNaDVDYWRLMy1sM19Sb2dMVTR4b3g5ZUNGUXA5bDZmalNPTDFsWVZ3NWh3VlJUNVdWdWY1Uzd1cFR4bmRLckVJWjlzRVdrVjZoVTZnVTllYVktMkVTSzhzQjQ2aUl4QzhuQlY4c3ZGSVo4QWdJOGVkakRuSHE3V25mdUdHVFhJUGVGc0NsbF9waXRSZmwzeHNfOUpaSXhyVTE3eG9xNWV4aHVuX0pORGVvREI1cFVEX3NUTkpZQnBkbkhQdDFBNFdvbUNmb3ppM2U4MU5KVlVSTDVWVUhWRUZiR1lUTHB6RVB3ZVRJaVh0cXdRMVk2UXhmNjVqTzhyenpLd21XWWNjZWl4SFVBek5GU2RBWjBxVFVZZVVVS0pmSFN6Y3haREpyS3NRY1cyaTVuS2tSaU02MFBtc2tkRVRMQ29HZlJGb2U3WjNlUm9DNUx2Q2I1Uk4zQTdNTDZ5elpDVUZ1V1NnUUVzZWxlRjBIWlhUQW45ak9SVzJ3ejhEM2JYblp5OVdlWUpQZGxfZVdveWpmWEhSYUxqNzU4LU9xZl9HZlRPNlJEMUZaT05telR2YWxyUE5kSjROM2NhN2MyZ3Q1bERKX3ZDVWRpV055MmZ6WjJpVkxpRlJWXzRLUE1qeHREUDNqSUdsMFpyVU5JTk5FdjNQYkdBeWJKWUFUZlNqQ2xjLTFFdm5tRkF4ZEdXZUo0elJSeEdNekZNU3BIUnF6bVlOUmZabS1WN0hyOE1kanllS1VPQmVqS1QzWlEySTlnZno2SEFRR3paYTFIRldGN3lUUDY2ZHE5SnZnU0ZPb1p3S1hIUWJJSGJ0WlNSSVd3VTZST25SUGN3dnJPSFowenUwNkF0Tm1OMGM5R3BTd0dEMmlxVkNpelBNYnlzMlBicXhJbXFuQ1FjbnlUd180Znd2TkdaN0w2TWZia2tiMF9aaGVDZjNWelRrcFQzM0gzYnJfamZoMkFHUHVkQUNsNk5NUTBKUXFmZnJSWHEtRU96MzZpMGthVjJIcEgxY2xadXNOaGhINzc2TVFWSTJTODMyRnVKcC02VU93VGh3QVpWVWVFeDVCYWdtZ280WHc5Y1U1cEYyVmhZTWExUDVWX2ota2tvOGgwaTNaNWJKSURIMjZ5MXFYNW1Va1FMby04WFNueDk3SzExdDFEVktNRE0zR3h6UVVXcnpPb0doMm1idDFGeXhMY05pWGNrY1dmUzItTmtfeGttdlpreVFjTlpPUzl4YVd3V1VRNXllcVc0VDJBY1FzcjY4WnJUcEZ6dzRLMWpKdkNXb0taRU9MbWRaa2JiVTZxVFFUM3NoRnQ4eVNoWlpXWUZ0TlFIOTVKd0N1VS1BQWEtWVhsdkVsOHNsaW80eGR4Q3V2Ti1qamNUUzdLR1RzY2lLLVd0eGlEbGlzMExwVGhON3A2c0lONjlXVkNQWVp3Z21uMnZvMmVoTU1lSkdmZ0xCaURoN0w4S21PM2pJamhEbjZYU3FZX3ZIRThyajc2VUZDSWVuV3pHOFoxUjR4V3h5VTd2b1JHWW5BZEFYVTZyOTVvaGZNY1JNYTk3NW1mOU5fWV9sLVJDWGNLYUJxc3FCVU1SQi1LdWlYckI2T1VUUzcyMFpEdUw0eGR3WlQzUXZPMDJvSDQwUDAxVFE1dWNVRlN6aFVOcGlkc2lRQTgwcndRQUJwM2c3Z3Zmb203RWRHQm4tX1c4M1FRRnJudzhaTDJWSzU1bEVfaEk2YktKdDl0ZGQ0cjhtQnhURm95Tm43YWtOczVGN21LbW5HVTVIY1FPODhkS0xGUEdNQmI4dDk1bm0yX0dVc0FEVTRkZFFHYXFiS1lXaFJEa05CeFBMdEJ0LVJINkl5SlFBY0FVY2NIb2xEUzhkYURYVlFTZExPampTRVFYVnkxZ1JrRjlsTkZOd2U1a0FsZm5uNHp6S2dka2hIdTQxbXlsM0p6QkJrUmNLM0oxYWxGNXA5MnRIdm5OUDc4bVNzckRvM284MS13LUlCRDZZOEZheENHYXlhQVJ3UlRacmstTjRMRzZnVEJDdG5QQzVUQUFnTDR0SUV3SHo0bFhpUk5uMVo4bTBsLVNPSHE3YzRMXzNzTnAtVnExX2l6VTAtam9VTHhSS3A5M3VqRmlWYlZkTWhwMFFyc1dLSGpvaFRJSEZ1cmk2anBIN2wxR1BtRjJmd0o5X0R4alJDbFFzVjE5MWFVbXRWV3ZiSHFwXzVjMm5Sd21tTHV5dndUbndmNlhMYmZPaFd6ZUR6VVJ2NVlDd2NxN3ItTWU3dGFhdl9MOU9kNmptZkE4N2tlNmJCcGZaVEhCdElKSTBKRXNwcHJjdTRmYmhVU2xFV3FnSm9hTFk3VFlpaTRXaS12UVpsQzQ0OGNCQkxjY2JjN1lPY0lQUGUwd3h6amZKQXNDZkpkeXRiRFlRcWZRdzN1US1TLWEzWFNXemF6U0FnTWFyOHNwRzVQdGM1N1E3TTJIdnJKS0xpaUhwVHZHNkJBaEVJb3F6ZHNkVnhSNzMyTXloTkpPcE9LSzQ4dlpGd1IwaWdqQjlrVlRUZlljbTE4aFJRX00zRnJReTZtRGdGNm1qMVZibll3TDhyYUFpSGxpeGN1N2NkcjVOcHhSNXQ3OUhVTERlRWVneWE3RE9qN0NucF9aX1ZGRE95cUJmMzZKTHI5eDZ0VE1QdXhxNDRYZ1hSd21fNloxNW9OS3lGak05S0RRREJUMjZucjlaajAtR2RqcXVITG56b2Q4MkticHdFVGhuMnFZUkFDZ3lmNUhyVzJyWDhjZ0VWUnhqNjVJbU80U01ncG4xQzJNYUVDcGlITUhFbGhfenoxbUZZMkRxSXBIU29sUURfc1lqTjVNbjlEN2ZWdGhIM1l1RTdUX2k3T2Vqdzd3el9ZOWlOVzBvMmhlcDN3VC1JckprX243aTA4aG1Xd09NOTBtVEltcVBpRUdsLXRKalgzU1p3djNqSWs3eFh3eEpVblI1Zmh1b2hzX0xkdGRaUkQtbUt1cHoxT283dEZiMG95M0FTc0JVeGV6NHBTV3k0ZmhPVU9BVlBrdmhLbENQWXM5dVhvbm1fcUpCS0dOdHVsbjBIS2JDd0gwUFgyNENvT25SQWh4U2FvaFZNZ0FBbUNEZjByYVk2dlYwSkFVZl96ckpxYTlQdG01aUNOWjI2aEp2cmdHaW5EcV90MjVadVkyanY4czJJTEhkTnMwTGJYZlJkR3BvTURmY0FsLWxSSWZYcGpNSjM3TG9WZkZENjc2Y05vYzRFSzBtZk9NRFpEUGFmN3VfM0l3ekVDTDhlWGxtZHQ1eE41M2tpN3lidXlMSGJaeHRwZWNFM1ZZX29HTjJ2WncyS01MdG1JX29tU1plR0dzWlR1Wk45V1JjSGVkZ1lkbmRFZjJqdDVnNjZJMXFDLTJFTjh1OW84YjA5Q3NTRk1lTDNwZHM4bzFqX0FWWVZjWHhIY2Z2al9rTE9VLXItb0k0ckZGejk4bXphbFFfdnl2SGdNVXVSOGc5NDZtdWYzMkIyVlBHckdSMHVJakpGbE13RkFVUmhWX3dnaHo4SU9xc0VGVEV4cHNRcFc1bm1DR0xjMUZlVWtpaWNna0pUbV9uTnJxX1czWkdrdm9NRU1fVEdGYW1ldnlFOVBxUVRmXzV4YTVtQVdGS205Wk5ZRmhWS1ZydlR0Ums0clM3d0dpRnJ3RHhvZjBGSG8wamMycmRiRldfc1JqQjNMbXlBTkxHb2NqaW9TTV9zSDJUYmU1MWIyQk5na1Z4djRwUnRERVJWSmhjQkNsNE5qXzhFVnVVcnNfMzI0R0NMN2xJemJuaUlrbG84M21zOU1TV2ViVHJNZWd5TmN4M2NkYzhfbF9QT2MwU1JJcHRHVzBaU29oeXR3aUlzR1ltM0hrY21RT2cyVWstVGxCMVFIRTZmb0V2WlF5T0Jxckk5dEFzVk02dWE3NlgtYld6VVJEb0RhNTJZZGkwNVRlam55VHhvMWg0ek9JZlNJd0lxbTJxWkNMWXdQNnBjNmNmc2xxWms2RjZ3Wk4yd3FuZ3o2MlJ0OXhNdGRuUlJ3WWdfZExfZm4xVlNRRDlGOFZ5ZmdqYlpXV3FXaDhVRE1pMzhLNDRsUzFjQ3l6aW9vLW5PMzVTMTctdkFscmpfdXRuWVpxcUZ6dkpXWGxSNG4tbi1WRlhEVWFnYk0ySF9TYkVmZkMwSVBRb19xR1BqS3F2YzhsS3B5THl5WkhaOWlGXzhUOXB5d0JMYjhMYlNjTzU2RlozOXBIemdZSDRqM2xqSGprVjJjOUhheHFRQzV6bER2akc2TTNVaU5GZFJPd09wYTVRb2tBdmgtWVRrQjduNWVsQm50MHEwM19nYzJ5S3l3YXlXZWNBTlFhMWc2NWo3LXZkS1diajgxWmE1ZC14UnBIRGsxUDJMZ1FSaXQyX3lKeWtrMVpPcUo2RXcxS2U4Mm5vTzNrMHpOdTI1UTA5T05sUjlhMWJsNm95dTVNMFdseU1NM21tZUI5cklUN2xuZm1oNEJJMmJUMUJOUUpVLTBCMG5ERV9sRkY2MDQ3SkZNbkhJb25KS3NQcndVS1RlZk5uS3ZYTFpoY1JzSHhELWxxbFZFZzFFMU1yT3J2eFV0LXVSWlB2d2hPZFZ1bkVMT29VbWJyeVg4VV9rTExQVnhvQ2tjNXpnVjJsVDhCMk1sUEM0aXA3UU5IMXFVX2J4RVNRbHVqZl9DWERHQ1RFWGVoaUhGbk14RHczMFFBX1ZZZTltMXNWNEltMHZkQnRrNWlQYXdZUVp4YzN0QTBjd09DdmFjRFduYXEzVjliYU9GdUYyU1JRenA4NmFRWUVxYzhIT05ZVHQ1M09NdE9EMXoybTJiMTYwSkstYThTd3R5SFN6MTZLZjc2Z2NjSTNJWWN1cHBDRFVsVVI1MjRldWttMTZVTlFpQlpldmFfRmN2S1g1cEk3QmlCM1lwWGVlcE4zS1ZRT0NIYUJaSDRvVW1yYmdISmVpcWVLVXFmT094OXI5NkNtRHo1VlpqSm14eFR5ZXZLeEFSV3c4bnpEWjFTYTRpOG8xZTZjd096QWpmTmVPYUNFbHpmZGJ6dGdxdENLWWxpb053QWhXWndGSmZicnNBQ19HVG1xZ05YeDJCRXNsSnVCbzZBa3dNeUJ1VFlwcGN0TzF6UFprOEU4WlkydkRReENsTzY5cTJlYXNXU1lzS0VWUC1YU2F2UGtmczVRZnRhelNaOElNN0R2S0hscVB3V1VibE45aUhOZ2lkb3AwZEVwNWY3S2tfMzBDVW1ZdDRVM1FXSWYzWXV0Tm5pbW5GVUxhZVVkUlF6M3h1ZWRqTTVTcGdJbnp6a1RBRHlSSmtERlNKRG9fem1pUXdTRmdMZFktalh6dEhzSzAzbGZIYlE1d0JoYmNXdGoweXJVUkRkbURkMjRYOGFsZ0U2SUNkRV85WGNLWHJ5bmJGVGJaN0Z0Y19LWW9aTTdLRDk4OVBoelR0Z29qZXBpem5Id01ZYjdFMXFsS1pTVndjZjhZSVJyNXNMVTNJYVl6WE90SHd6UUxQSktvRUpwaldjWUt0dEhkR0l2UlVuU3ozMzgxaDZRQVFvVDg2bEtaRndaSTluTE5SOENzX0NNVmtrU3Q0ZTFiRml5X0JFeGRkUEVMVjRWOEJWMjI0RTlENG5maUI0LVl6U2FDbmNJdjNmYzNEV2tUeXltN0JIaXRGd0ZLbk9TTjloRVExdk9vNlVvQW9qeWM3WTI2cFFXeGxrYXk2OFJUQmtZV0M0X19jZlExZ040UWRHZld4TlNsME83MmJLclo2NFBrMW1WQmpVYjZPalVVWFhYR0g4N1JWTW5Vam04RnNST203SFFJRkhaeV9wYWlTQzdDVjNKejdmSWgwMXdKM0FkOU1vbVVWYXlyU0JYSEN0Y2tyRjVfLWFiWVVpVXdCeWFCQTVZcXRJLVhzUGxPVHhDZjNfZ0tnZXJlMmR6eEdtcTNiRGpUbk4tRDNkM293cDR2eHdPV0sta0pVNnRNdDdSU3NrR1V6b21tM0ozakRWRjJNMzBuX1RlZUJVZ0pvaU9ZM0tkSlNmaGJxNzgxeEdzNWJtMmxPLWJNRzZhZFZiUy1BZmlfWHdhNWlXTlZNbGE=)
        FCI_CERTIFICATE_PASSWORD: Encrypted(Z0FBQUFBQmYyb2l6SElseHhvWGZ6TDdQMmxaY29vb1FWSjcyYWhKVk5mQWp3MUVlRXJLdmdjSGJkdG9hSXNmbVkzeE1fUGJlSXJkLUY3ZHdOU2hwVWpDREVUeHYwejlNbEE9PQ==)
        FCI_PROVISIONING_PROFILE: Encrypted(Z0FBQUFBQmYyb2l6QnB5aUJlY0h0XzRPS1lYbndlblJXZ0NLZExqc0xpQkExWW84WmlpM05nQlR0Q3l6X09HRDNFOTROUHp5ZEhvVXBhTnE2NzFsRVhPLTBZV2lKY0k3MWFGTzJPWWkxZ2dCb2p0QndRdVFURzJlN0RfRk5qOXhjbWRDSzNNUS1MMW5kNTNHWDY2WHdqUUxHTlZQZUo3YVYySHVla01mUkZzSHdpOTZyZXluYlVPcXhfN0N2YW5ELURoMm5FdUNlTXZxRnpTempZZ091WkdDNlhlRHMzMmpxc0RqVmNLRmR3ZkpHNHFqdHJkY0REZXVsUTdTQWNZd3NGeG1waTRhWTFzVmtpRnJxanVjeS1fRURTNjBya09IcXliT0RqeExBQWtoS0hDa2NmazRmN2UxRjhuZFhlTlQ2RHBtdjhZWWNBeFdpMTA0LWJCR3Q4LWpkbElLbFN4cXoyOVVlWmcyNmlQNV9NU2xJMVJ2LWtpQ3BBVmVnZEdadE5oYzRSaWdOOHYzcDM1UmxMZmtrTV9TVjFMRXhldlBlcnhVY3htT1hnU0U2SVJ4ajBaemdhcldtWTZITTZ4VWkyOXpHa3pKaGI1SGtTN2hkeVpVcUNVTDhuZkFJYjAyampqNUd0Umh1MXlzelhJRmV3Njd1Z1psclUzVmVYa092R3hJSVoyRmNydzRZMVJNMmFoSFZOcE1RR0RPWmxEMkxqVkhUcnY4ay1BcDJva2plYXlkTFUxa19HRnRhaWlkcWd3d3VYMFpWQm1PY3l5am5jM3M0bExuMGhHd2hkeTNZYVhjR2pXRk5sV0dnUGQ3WGNmSkxQR2QyZTdwM0hEWnlFUlZwdExRU0xCMDYwMWpxd3pmTWJlemRfazF5bUQ2YVZSXzVmSkZMeHVqWXBKdXZwREJWLWVXdXh4aURRTXFZQWdtejJNT1pGSzN0NGg4ZGh2LW5oMTNSTFpwMnRWSHlUdVVrMDZYZ1QyZzJUbVJvSGx5cTJmdGUxNWhuZHBQNGswU3lTZk5LVnZfbEpGZlFGR3dZWFR4a09PNmx5clRCYmpaYVRSNTNHNGo5M1l1bXE3X0ZkajFVVW5sMXh5MUVMY2NucVBLSGExckxSZ0RaeGgyU25nenlXREVPSmpDZ2xFakl6WldvX21ObThEOXl4d0o0R3VOSUk0TmJDYTBEZmliVUVTV0NtLUFWTlpMUlZMUkt3YzBiOEVnN2FDLU80ZDlMV3F3djlOU2ZkM0VZSFo4OWlyX2dTUDNwdU9QakR0Wjl6RlNiVXdja0tYUFRPQm1GYW9vb1I1bnVhb0UyWmFZQkluWGhlajdVQWRPQktaWUxHbGZTcFpuWGp6Qi0zakIybXBPZjlGLUFoY0RkZkdiWUFjWnc2LWhQOFk0b0lRRjVfQ09fUDhoSWVpZDZJQlRrLUkwa1FJZlNUZ1ZzSXBHd2RRSzNFR20yMXZad1pJQmVBa0h1Vnlza0pTa3dPM1VYUDRMRFJHQTRQSm4yR2prZUdEVlJ0dS1qVU1QTU1HZktEbFlGM2NqZTJrZm9xREdXSnFRQUN6cE9WVThrR081SEM0MzNlS2tLaVJUMThZdHhRRUFGTjFodEpOd1RWOVBXQk8xaUpnSXNiZzdmY3k0SDlVUnF5ZzJ3WHd5M3ZPVmxiUVB6cG1FTmp4Z3FMQURnWlV0Q1VJckl3MFJPT01WWWpTaUN3U1IzVk4yZjBrSEtuaDVrRnBGZ1ViUjNuZWVtajYyTXYtWU1XU2F6NVhPOWlqQzVvQTdWY052U0t3OHhKWnI3Yjc5VGVZdHRaQWVPeXhLdXhQUFpJYWxubS1Wc1hybUtjR05idXlZY2EybEdsdXh5eHE1b3NBQW8wN0dVaEpKV3FFanY5UjM1QWxYTm1HdVZEY0oyX1VyY1Q5SmNOenpReWJSd1BVeTJKQTUtNklPc0ZDdDhXTzFvQkcwS1NJSEZ1SnowcklmbzFkZThBLXZtZXB2TmttRktQUmw5RFRaa1R1TkdtTFJuUkZoekZ5XzhpR042VGJSZ0ROSnlsajRWcTRUNkdtbXRtQnV0RWpuNFkzRkotaU5LeVFpeGMyUTJRcEFIRF9qelY4M2h4LXBCbmxSZmJ0cEVlOUc5cjNtZktBUVZpTXk0WFNtYW5QMXo3V25ibDlHc2docEFBbms3ZVJhNVBQZVpLSENPbXB1SkJWTXhiVEJ6NTBzeGI2NGlBMmNMa0F2Z29YanFQNDRacmJ3ekZNWE1ENGozekZ5VGFkR2pkNnRRR084bGNzckpmc0Rqa1kxVlM3UzhnRWxtQzJKSWF3WUtJNldYYXp6dmMxejFUYzVjbklQTjR6YWZjOXB6ZXZYbF9Obkowb1JDVllyZFF2c3BVbFAwR0dvM1dNeWl6QjBXOUNnVkp5LU1wQU5HM1NqWGJSQzI4aU56YXZjZjlXcWlVUWg4R004WjRuWTByYnNYeEZKcld3bnFtQm9TTm96MkYxYmlHVmpCZU9mTFpLaTNITEVPQmw2QldJaTUyWDYyUzlGdHRJVTA2OFRrTS1laXU0QXpMazBjdVJtMTM4YnJ4b1RCekp5SXRWdkJnMS1pWkRxZlI1OEV6cVhvT2lCQi1IaVZZZ1VrMDVQRXAtbm4wY1lKY1MzRHlGMzM5YVJwRWxaaTZPc2pkZS1ENnRQZ3R0elAyUlk1MkswWjRJVGVyWlMxQ2pIbVhwWUFsTWVvUldBcE1pNTVoRURFQUpSU0plZGtqQk9wcEpHcUw1RlBrZHJYbDVHSzQtSExyaHFSYjJ5ZE00UnplZkpoYVR6R2ZVNmpvU3B3X216VXJzWmdCeVh0dkxWd2FpZENXV29sZ25vaExpdjVEU1Z2NWxtdElqeFNMOXZIdEJwaHNPcFQ2dVlreGhLQ0UzNVVCZUdibFAwUGZxdUpCdkxTeWNMbmk1cTRVd3VKRTdKcEhzZFRBNFZYcTZvYlpnNFFCSFAzLTB0SkhlY28tOG5RMmU5WUlDWkVkSXJzRFBrbGJMVWZiZzZlNmVucG5pOG9VVWpDWjVxVnlzVjUwSU5uVjh1WXBOV3hhNUk5RVZhRFpyOEJ2UFFuaFBtdXZaZWdGVk5lSXFnSlI0LVYzZnhRRDItU0NuakhqaXhBTWxfOWNaMDNUX3dSRjhSUlVva1U2NE9wTTlrdnpaRDJPUUE2RkYzU0VydEhnTzJXeW4yc3hDSkNNcTl3bDBDSGRvNUNjcXNrZHF3alVXZEttZDdsNENrOVVBc1FrN2RCTUhkdUZBNk5YcHdGbWFSN1F3VzNJMlRBbG5nX091Y1NFcTNodEVyWkZaM3lZMTlDUTdjczBXWGYzWjl6ZFFGMXZ2M0hZZFdINDhVRlpmWFhZODJPekxBLWp3UUk0RDAtZnk3YnhQYjU2Ui1LS2FSOWY5YzFPaGZnNVc5Mjg3SFJQQjR6bkIyUVRDOEFPTThZaTBwLWxweFQ4YmU4eFltNVZHN3phZ2FDN3JiM1hib3dqNi1oNzdmNHl0U2liMEJpdWlHX1lySzh5bUFEREZoWkhPSXhqOWZjY1BlcmlySXZtcW1oT1J4SmFqVDJ4WkZIVFZmMl84NnIwWTlnUS1YTmk1RzE1SDJ0eXBpcHNGZWlfc0dHTE9fLU1CQmVZeS14NldJRGJVbXg0QWx3cjFQU25OOHdyc21fNTl6My1WU29vcExTcHROLVVTMnhtZUk3T0lNNXRIU1UzZXZPSjJTWUNwQ3NXdHYzZi1ZTVdfeDBHSTNueVZtSTBQQW9yX1ZkenEyYXhRbFotZC1jZERFLVlOYkQ2d1hVNU5TbVZjYnpRSHE5TnMxRGU3TXFCNW1famg2bTlVSmd1anA0TEV5dmJ0N1dqbjlabG9NU2d0cjE5N3ZNVVVLS00xTmVpXzkyNG54bThXX0NRX0FydGdXWmVablNZU1FrQmFqRHZzOW5ER1ZNUE9mME9TS2JsLUlUamZKQ0Rnd1BvamxsUnVvT2gwLVljMHItMm9KcXhyaEdoM25waGtQSzBFeGNQajNqeERTTjJQQTAxb2xtZGRhNDZ4LUlsWEE4MFhwc21nUGE3Rjk0V3lOeUpFR2t4ZVRCUHloRHhscmlVOFVzUFNBTFY0eGxSQmJ0b2pCaXV0bnZIWC12RUlQT1p0UVFzUUlsV0pDTllPcW1FREVHQVZZTHFkVml4bFJDelR3d29fcmFDT1Y2eDhSZUxiRVR2Q181N0JvTTdtYTByZHZ2WE5wdG96cDAwaFNrRElIbXdfSVQ0LUxYVHhQZjBnc0tuMk12TEtVbmQ2TnNzVHJRbjRKc3VtaDNBT0VuOHBVdlZqQVR3MUNwMEJIT1FRM2dScF9jRkh3Z29ucG9xLWtHR3o1TUxMZXV0WE5FZzdaYTJnb3BFcGppMUtNNzBaYm9NNTkzWmVZSkdRLUtFdDdOckZ3M2c3TmJETmhFYkF0QlEzWGRDNnlDbmFaUXcwWGFoYk1la2RYM2R5STlUYzFxMWYySGxYeHZic29PZVdXSEI0U1RQSVFPWnNLZk5DUFNEVnpIS3hPQXBSUTFSVldSSTRKaGdsUE0wSDM3ejRoU3FPb3pibmtlYUJZcGptSTktYjJ3aVNnN1VGRHBxdTBndEZ0T0pIQTBzQmUzU1RoeUxMUEdZOWV0UTU5NlYyaVJOZ3EtUkVRME4yamIzUHpOdFhoZXJjN1h6Y1pCVzVEcF80ZEh6WHRZbVlEOG1rQUhtNlZXQnJwZDE2aDVxZlhST01sbk1KQjZTWUJTVkU4SUdiMHRZbmNoOEw3WTNVWnZ5aGlUSTljQ21SaXJmOVR5bE5YckRHR25ncThsclFYaVVJdWFRc0NnbEhUREJRRElNLUhiUGZnZXNVUEI2MWJmdE1aS0wyVUJDOVZ5RmtnMXZoa1ZfdndnRncxXzlSWkkxLU5lMW5VRGo2OGZRWGVwbEVFWENWZ3pfYjN5eFpZOWgwcjJtcF9ZNE5ZQ19nbnM3a2JrLVp6Q1lLZmZvVnl3ZkFaQkhNMnhkZGowdGJ0aTVnWW5GRnZjcHBNY1dIc3k5enBRSE9ZMldhY3VMVEtQeGlVbFBPcGZOeXUzZnlWWVpXamFoak9qQmgtSWpCa0lvVFNOaHB6UmgyNFJ1ZmFLVXpGeXRzWGpsWjhic19Xa05HOVlmSnJNaHA4aUpVWHJQWng3cmFkNWhkOC1Zb2FWS1BmSGlIVHBmalpSWDRWY2t0ajloUEpKejFZV0dEek9VUzZPai1GNFU0UHdOeEt3TlZNN3FOZ2ozaG5fbUd1bjFDQ2ZLbzdrSFI5aFpvcnVnYU1XcjdsNnRzTldEb0dDZkJ0VmdFd1Fsd1JFeEM3RGh6WWMzdjZXTkxPNnJRWXpwRlo4c0N5alF2M3hheEExQW1oT1pTOGhubExhay1fSndfUF9ONUNOVi13empyZ3hzRjR1YTA5TE0xWUk2MlhPMzZzUnlVeHM4VU5FTDV1RVVpZWNfNDNnekFHaFU1VndCeklLVDRxZC1RSW5yTGRJV0NEUlBjenZpTFc0b1R2T1FrUVYwSjRsR2puX25wMDNaTWRvc2pHamdoZW83clJBakM5dXJDTXhIdUFwZmZIS2dMNy05NnBYY2tNUHFKRnF5WjAwTjQ3QUkwXzc5bnBxUllOQmVhMUI5emJJQ0QxTFNxRkw1ZUVzckFxZ1BlMU9kZjltQzFuWXdmX3FrQ09zeU50X0VMX0RpMGduUGgzUmxzRXlkc3ZmYlRsX3NDckszeHFzYTNVUXYyVVN0RVpWZmRwZ0RqY0syWnFQeHJfYW5aRFo5VDA1X002dUV3VmZJeWlBOVZMall2QTNSQUNQLTlMUVQ3U0VhUktOTXRaa0FDNHJiRGY4OEMteEhnMnFFb2NSRWQwTFB1NnQ2NmhmVkJDQWtqUENBaDRVVUVHVUNpQlNTamtwQmRJb09KUEIwUldKRFplNTQ4bFczUEtxbXNUUFlXOXExb0VMX2ViejFSTFktbno0Q3hwNHNHWjNiRDhDV2tiSGl0THdtcGhiVXpKeDB2WXNIVnNGNDhnMFlJcTM1ZWNCcGVGZnYwaGlrZ2w5OHNpc0wxbDVVTlEwWmVrQW9USTlRSnJGVzJBR2p0VUdaRjIwWWJnd0YtbExFZktSRVZMRkdNMDVlOVQ5VFotVUdxT2ZOeGtXbnAzZ19jN1AwZmZXQkJWbDZhMWE2dGJOWmd4bEdsMFpPZTNmQ3JPVXhpTHBCbXlmQkx1Rk5XNDQ4Y1ktOVZZR2o1Q0J5VkxiOFVqVU9UNDFlQ2VnVEluZG5NQXA2Rlp4ZWVjZXR5X0R4MmdzM0JubjI3NGFZT2l1UXZSSGY2MDJrRlItcmNjNERQM1FUMzAzTVVOLUVHOXMxZ1pZU254SnVLeGVNckpSbGJUQUpvbnFyQUxsRWpHV2VtQ2RkRWJWZ0Q5UXRHZ3A0MjVBYTZHX1BQSHVMVEZ6eDlVWS1sVVVKREhkUjRBcmFxel9BZ3A5aDgwMEFGQ1E0UUtoQWpsLTRaNFk1ejIzLTdZTjdLUzlZdkZOQnBXdWtqN0gzZmJoTkxFSUlqMFNKNDZzN0c0TVhqQjg2elJEam94ejZPanVFdktyMng4QWI2eG9fVE9aNFpDR1dkZ2FYZUlNcjFSLXk4WTBCQXFDbjV6ZVZiLVZFVWJ1eDV4LUh0c05YRm5MSDEwQWpJaUVhbTZfMTFVczhKLVpaTXIwZHdkNWNDY19fV0JHMDN3Rnd2WE4ybDhqUWt6TzNYLVE1S0RQWmwxY3NhR3VWSl95TFp2cEgteXlkRnA4V20tR1N5T3ozM3hiaWs3QVg1eFhsS0xqd3Rfa0Q5LUlRbjhhdHcwMnV1Ti1wQm9YdFBTYWVoS1BDSExwMGxWQk1yRm9ZQmVEWHRlNndJYm83MUUzOVdtbFRrRms3RF93bElLNXVmU3AxUzBmOUVKMEZoU2E5d2dnY0Q5bVZCZzdDS19MSXdNWkZrdjRPYVZPbWw0SV9SSW5kZ1VvRmtJOXA3cTFlR0RYU09xQjlnNXZVS05zaVhVVGNMWDFRaW51MTB3NHlpQWN2ZFVaeTRUNHdOWGUwMWVlMVZhb01raFFDc2VLaUU2WDREVkRkUnB6cGlBVjg4RUtrR1B0QThMSDhSSDE4MFlocHU4b1JRNHBRaGlKal9QOTFtdGJLSUlIQnNHRW00STJYM0ZPN28zZ25QVkhNSExIY0RDb0pabFAzd2x3TTNYQlphSUFiNk5NMm52MEJQa2JrbnRpS21feXpjdVhRNXhEemJ2b1FtUzJzWUNONWxmUXJQRlM3WFp4MFNZSGNoTmYyZ24xQUJ3UTNVZ0M4eUV0azVFUkNNTGpWWUJmVWxRNFZXalc3bmQ3ZUQzbThDNFZvUnhvZDV2aWlOT2Q2SjQxZDIweHAzNEQtWVpFZHFtRVQwWlBWb2N3di15dmd4V1RJNFo2QThkem53b2dBdmxjY2xUT2lkQ2lVOTJMd3hWakpxbW9ub1FkX0NPcGhGdGl4ei03YUxjc0dqWmNpR1NBMElZeEpZT1FIUlFXdklZaE11aUZfVmFPUnRXUUhObXJ2RXhPNWVhWXZ4OUFwcld6V3RMX1dyNzlERVlnVTk3UmFOM2dwbzA3TktyNk5uS2FxY0NJYndRV3d4dzRwLXBHUERTSTNERWFPTGZxSm5oYVJNLWNDTzg1WmUtdkE3NDZvQ1o0TnF6TUloWTdEcmg5bFUzazhHY2x1S0FXa1BnYWpOOTlTT1JwN2Vta2JTM0hpdk1GQVB3RmpQWGZ6eERMM3d0NGdSUENQZ1ItU0FOWmRpQnpJVmNITnN5WGszTVYwVjhDMVd2MU9DakJoUF9QOXgwQ2Q2dUM4aXZ4b3FORlh0VE9DZTNLN041OHMzX2h1TDgxNW5oQ2N0cTJ4T2VENUptVTg0TXpiSGhRVHFaS0VQZElPWVVkcTdfVnhqa3hkVTU4NVFWcjJmM2RkUHB4ejF4OXVpV1J3azBMV2xSOHFvRlNSV1AzSC1vU2t1VzBDaHVoeUR1dmNBdEN0aXpUWlBkMXBzbDNUcm5QOUdBZ25mZ2tSd3otaGRwZVNrNktzWTFWX0pJNjhUMGxVSmVOaEVtOFJhY00tdjU1T25yZ1k3eW5wZENnN1NxN3pfQjI2V3RkRnQzbWVtSDc4VVY5QkJORjdMT1czd0tTZm93SHlDWFNldHI5TWZUeThZYWp0WEplWVBQRExvd1o0RHZseGdVV3J5X0FCOERveGo2YUI3VUd4aG5LelhFcjFVSGVXb0otZDNqVnJUMWM5UllTVVlkaUE1c3BHQkZ3eV8zY0Y5MFhpOG8yX2dXcmtOWTZuTndvYVAwU1ZKdkJydUdhOFh4UjFwUjV6MHkwQ3QwQkpRUGppVjdpV1ltLS1nRmlaeldNX1BjZHJUbjBIVnNlb1lrZm1vcjJvUWZfWDhFdXlDV20zN2ViQ0RONG91QW5HYVgzbHRxMjIyVzkwcWpFYlVrdWctZzJET3dEUlFsUmNKbXNXM2EtNENYWHdwNWVWaXhGOC1xc0VwNnZkVVVBR3JEZC1KeUVqSG90d25uMFJfYkVqeURIU1ExQmxGbVIwNVVsVnlUcEpZZU15NkN2N3I4cEd3WlRjQ0lZNEE2bDl4YjhjdWxGNjBUaDY5UXdQRUM3M3hNczJUOEE5cXpIa2ZFcHhEaXlwdUFwOTdFNG5aTnFGZFBVekFGSjFUMzRHMGFnRnE4UUU2Q0FYYlBLak1QMHZEY2lNTUJPU2d6MjVwVzEyR015NHpUdkljRTZFOEdfUEV1dUhBSmp5UXpHVDA1TmFqYWdaU2hJcUZCQ01aWXZiTjVySFZlZzNCMGhMdFBzdkw1bjU2dm1QZWItTHdKUHRITFROWGJybG5fbVhYVEtId1pjeHgwTXVEb1hueVhhcXo1bThCRUJYSmNMUk1ER0FUVy1DRzdIQU5xWm1SSWplbDBiSlVaMFdheG9lWlpkNnJqX3Blb1A2VlpPd3ZCTlRNMmVuMzFKN1JkRThFRDJaVzJnUjliSGdiMzFwZHNGRUh4ZmRHdUl4OUMwZmpQS1hBaERHVEtsbS15S0V2RHVKNFlVWHhSckVRSTdPV2ZjTS1OWUMwU1N0VE1kY3QwY1ZCOXRhZFNLNmh3WEtSbUVyWGJEVW1XeHZXVFVVVXNZUmU3ZHJtN3JRSUNvbjEyWkxYZl9wZTk2bHpLOFJFRGZITjJFOUZmM19FTUcyRWhHa3ZvVWR5U1h6a3JtQU9CYVNodElsbVFzelpzTDZwZjd5eGcycE43dklYcDBGRUZVNW96TWw3cFlsTnF4MmtUM2R1UXFaSVpwcW5fOERJXzcwNnFQXzNMNS0wZ3dlZDBrMUVFTHZhMEl5dVljSjdpRUVHbFVnUnJmcXRJRFVOMU56dlFYSjdPLU9IRkMyOHExSWg1N0hFNWM2VW85VWJDbVJlWTM4XzQ2SHNLWC1CN3JXczN3LUZFUzhtemYwLWRoRUlXdXJZN29WQ3J3dVhrYWxOX1VFM2lqYzJGelkxd1p0ZExtOXNZUmNnUmpPR1pDeDFyQzlxTThXczBSQ2JBQVpDbXE2R2JxM2djWlRPendjbzJqUnFOZGVRSDkxTkVnVDdvcVY1dy1oNENLM3ZqV3pmclFhblBTMll3QkQ5X0dwTUcyMEdrSVB0LWJnRDZQUHh3OW1RMXJTM0tBTVFKdENCODlXeWw5dDZSd2VKcF8zSThIdDFpa0t3Z1pSYWhnaEwwR25DZVh6RjJ3VlBwamZkRU1rMFltZHZ5SGd1aUJJYld5YjVsYjRqVTVjNDZJcy1GQW9jUGJTLXdmTkE0cVhJTnA3eGRqLVRYMkZlWFNzSGdhYk9kLVJoMjl1cFBBYzVSbGVXallGMGkydDliajEtaHJuZlA3RVVUN194QmxFeklXR2F1R0FoWmo3TkhnSm9IR09waTgtQkl2ZnhZX0cxY3JKSWgyQ2FVSlZFRUQtWlFvYTlHbFN1NEJ3c1FGMHh2VWNKRDl6bU5UcF9UQ1F5Z29HajQ2bGhRSndCYVFjem92aDNtWjBud05FekE0VHFuSlJJYUVDUmd6UTJxNk5JRkNVMmMxLTY4eTB5WTN4eG0xYlVwSzBhbENscDMteGJOelp4U0txS0RvblVvWmJwSWN1OW9iU2hCd1d1cDk2Qk5iVHk0V3dHQ0l2cDRld0pxWWRNNHp3Y0V5RGhVdE52R04xWGxWenJOVlRrdmdQck5pU0JIWFJiZFdkQmp5ZW9hTmVKYWllT0ZqbXEycDJvc3dzV25GYlY2WElEcTUwWkJRQTUxeDAxNlA5UEVXT0ktQ0FDQzdjcm05TGNoQkNuaUZRdHVOVFM2UGpOemM1Z3NfSkt5MEJWVHdZN0RDUGJ1cEdFaUswRDJ1VWdSTjJ3UzhNVUp4VThLLWhTMXU4WmdhN2M4Y2pkSjByZTBxc1daZ3FBbzh2RDFlbHpSZ1I5QWIwVmJPNlBtNHduVG5hMVZDaDVDN1hydUtqcjkyeVVUbDFOUDkyak1wTHdvZ1JKRi15UVRPdVNrYnliUGtxVHRUMTl1M21ZaXcyMHBsbkhZOF9oOWM0VFNidWhtYlRLbmp5Ulc2RUg0SUVNOUFzVF9xd1haT1NjVE55akZiUkFXY1F1b2ZoaTRNY3dvdl9tdENvZ2IwQWFkVXp6dHV2NjZIWmQxMk1HNlU3YXFGdGhTSDg5WU4zMm9fSDhFZnpCTVdveVpwZzNnTURUMUtMb042SGZrY3RFcE9ONElCYXV0X3ZsLVh1el9JSEE2MDF6NVo1c0xjdkpsSkItUldhR1dYM21jelVSNlJfdkJOV0ctUDhqYzNaX2I3TEVLbENhOTNSX3M5WjRqdGdiaEFBckplN3ZQVHhJTjNtWnZtWFNjTWRNWGFnTU13aUJvU1l1bW9jcW1VZ2w1aGRvclNWWTdwUmg5X3ctcXNMcTBwdUs5Mk43NXhWMEZoTGY3YUlyMWZ6Qlo1LWNHX2hxQnoycmtENG5HNC16SmVwQTdmX2dWNk5RYmxXZEdwNEFOUXRPWGpVVXYxdUF5SWZ0bGtKbmJJa0pSdlZCdEV0eFpreHF0cXVDQm1JWlZISHNBRkNtSDY3cEtPZjhsMkR4c25LMlo5R0hFZXFFY09aNkpMLU5GLTRFdnVKMUYyVlRGTnlObDF5UEVUYk1aMHpKS0hNY01nYjFzVUxaMXdUTnVxUjZBRjZOZVF4alAxUVc2My1Bbm9xaHJRZVpaQmpjVFVZeHp6MTFXbVJMTE9yYXd3UjhpMG5wSFpZRVFmTFlqWEFsT1poNEMxejFwWFMxT3dGdTItak5TMUxHWlgtdmRCSXpjQWFzVG9MNUswU1ZpNUVYSl9FZUk5NVA5dUVndmE3R0dnMy1ibF9FV3hYRUx3bncwdWRnYS1FLVZySGgwTkJPVnFTS1dnUmZjNWNnV1B5ZTRZV3QwbnlkdjJrbnl3MndlVDRXSW9XS2UyZTc5N1JEZXh3UDlLWDJGUnlWT19QVkpfeEpXNlktc0pqMEkxUEpGQW9GeThrbFpWT2s4TGtwY3ZkNFc4M2ZmbV8tejY1SFJZNjh6a3JfUk8wcnctTW5vd1pXSmFTYUJPcFF5RnFsa2VHWTF1OU5oWUNxMlktQ21qNEF3aTR6eV9pQ2k2NEVRT1ZjbEZiVk5hTy11dXlNWVdxN0tVRF9MTVFTWlU4elhieGsxM2RLZ0xhZWYzcFZxTkRlZEU0YU5Bekd5cUs3cVk3R29FTkN6VENKUmh5T0E2cnNEN2U5ZXZKeXVSWEZ5OGQtNGdpNEVLcUhnb3o2bHpKZy0xd2RyUWpYNDR6Mm1ZSFRmdHZ1WVhrQ3NycHRpdnRaZXJ4ajA5WmxaOFZaNjRJeEVLMTVnVGpLQ2xuWElwX1dBOUlwZGFCbVFOaktuOHlmeWcycjMwZndFMU1ucWgtUlhuTFVKRk9RMDczRGp6XzlFQXZkYTBMRnFxeGk4ZEhIclJMVmtkMm0wakFvT2otSjZaQmtRUl9pRHhTdld3MS13YWR4LVVjS0xwMnpidjNKTWdQY0VoaU01S0ttTjRqR3JKVmwzczBpR2dCSWNHUFEyRnVjSzI4VG1hNTdCejlQUnVzY052OUI3VWU1RW5XZWd2WE9GSFo5SzVLQkc2TGNDaHZnYkxsTExqcG43VGtDZzRFd210SVcycnQ5eng1c3RCcWMxX1VUMkh0QkIyUmMtd1RXaWtZWGhZcTNUYUtTaEhKTXFYbnJqWWhmRU1GSzkyaFFyTzhUT1FDSkVWNUFxNTNlc3V4MFJmZDhDN3U2UzIxZ05XdU1KbVI4Z0RnRmZtZ3Y0TGF3V0lBU2JDM21LQUxrampqalpLcjhUN3pid0ZKOU5IY3VqcW41Xy1nQWJXajNFd3RGOHhUVVNIMEF0MmFtdExPN25BUno5UXhTX0FWLVRwX2JlOXphR3c2YzFJLUdaWWhBRk85M1ZGWUprLWkyT2FMbjJCdmFIelpubXpvZFFXbU8yVlpVWi1EMkh3VmVNb0VSd3Vibkl3RWtkd2syYmtheXQ3XzlxbnRjdnhpR2x2dlp5RzNBbUhVU0t1YnJuM2VIY3RNSkp0Z1haSllCeEdwUDEwbGE5cmZCYUcxZUJUSVh4cENOeGlha0hxYl9LV0FBVXZLelFpQzJ2UUZOMDg0aU9JdlpVbmdleUo0UUlGejA3SElreWZMYWdrNnlkNVBLUlJLY2dKbG9sdGxJR2NLVE40dzIwLVh3WlpzUVBTMk9Sc0FTNHVHQVJkNFRqT18xanluVVkwSFYyaFJ3WFVUVjFnZGs5cTNwM1YtSnhzbmhfdktMQ3RMNlIzbllJU3dOSWgxWmdMREJPT3ZNaUdwRm9sd3J0YmVObktTeGlZOVBqZ1lqQVYxQjRDQXJldnVIQU90UUJmT200aDhhQUVJUzF6cHgxSnRqY0liZGpIc19HeHdsd0JEejlpM0lhWWx2aUNpbGJYWDdKNk9xYkIya1V3ZTFBUzR0VzhpUTA5U1VPVW1DNDVTWmExdWZtUzd0NWZWbDBaMUota08ycEhhTUtzSmtRcjk4SmlHdW9EcVRRT25JbE1nOTA4N212cWU0b3RKYmI2ZWdDRElhQVJkRHg1V2Y2OVNqc2dzdXBDclV4bUYwQUo4VmdKbTFueXpJV0JEbFI3WHhhNWRSanZFaXMwOHRQaDMtTXpQVVJLc0lNaXNWeWFVd1RKYjhiX3EtRGF6dUVrR0hNS2tXdGdKb0hPbjNLU19yV1VtZWIyTjFXWVpyWDZwbUNOY1ZHcnBMcnJKQUEwQ0Y5Q1VZc3RRVzF2TUVyWUpBSGVXMEF6c3lPWnA5RjdjWi1GOG9qWmIyVm44QWV3NlFqS3MtaG1rdUZPVXFnd2ZFalkyelM0bkNqVVFZalJ0Mk9veXg2YmlmU3VCNTR6WkQzZ0xlblpSbXdyNU9BS1k1dG1vV0ZEelpleFR0M25hT3ktblF6UTJ4anJnMmhIMmUwMmRKNm04MDZMa3JINUxIYlM4Qzd1WXV1cWlTZW9kSlAwT09ISFZTNDRzd205UGZsV1dNb2JrU2hKMDNuSzQ1SjJwSVcyRVI0dERPMWwyYnFOZXp4QnBpazlmR04tY2s5QmREcG0wTUppM3NMSk9wUjgwaXl2R01VQ1NmYWdoQl9vQW1ZdXd4c2o2Szk0TmpGMkx3YTZjNDF2X1ZIU1l0TFlRQkczTFA2bThVb2ZhNlI0RU9WTjA3UUJmQW5xSldnNENjMG5kRFV3dWIwRUhzUHVoYVh2bUhyTnJzRFgzSUc0X1Y2aXkxeVk1SHMxQ01aLU92NGNJVEM5U2I5TmI1NERHVkx5MW5EM3pNUGJfb2FocF9JUFRYLWJpdE1rRm5SbFN1NUVYTFV2Qm5ScmFfbzM0UGhOYzlRY0hqR21QdGM1UU5yYmQ4ZWJPaV82UEZWOVVrQWZmb2RlZ296ZmhpSXdnZVVXV3R4OFFud3RLUXlNcmdtRDB6blVHVjlPVm1BSGFSMjRMLXRkRllhQ1AzZ3NKUDA4c0lqQkFaZXhzaTVoVFlkSXBsYnVVejRBa19LTWpPblZYUTg2Wk55MHNCSHRRYnhrVzZGdEpqUS0ySTNQYzEwZFNwV1I3ZExSY2tqallSNEUtaHNaU1ZpM2N6VnM5bXdXR0NyTTRYMlFpSm9lZ0E5Xy1vTUlvMThyUl9XM0I4RFA0QXVTTi05ekFsUU9JbjJrWVAwcld5VXE2ZWVqLXU5T0VWTjhUMnl3WkpMbGw4SmFvTHpRbFpOX3doeGFGcE9teTNFN3dOWmd3Sm44NXBPS1FvYkZIYi15dlp3UXI5NzRPUGpfTHVkdTFDOEFnOG14clVHc3lXZ0Y3TTN6U3pVLWdsQ0RnSTBJWnpzdk5ROXZMaTdKWVo3Vm5wVkNQVk9MTjBmdDkwbmZ4TFBuTDdGNjRxaDhBbDh0c2dQWVhaeEhpVEUwNVhxZ2pLT1RVd19TSHJ6dlE2YllJSkdXOG1MdmxTZlMtaFBTeFdmTDNhRzBOOXlnMmpOTndDNW5URDIzODlsRVM0ZHc4X1Y5b3AtaDd4WHJrcHkyOFVjWGY5anhDeDJwUlNtUHFLeXNaRTIyYnU2X2Fud0FTOVU2TjhhNWFXeVJJdHlMWDdLb281c0FaZnVPR3ZlN0VSeHZfa0hlWHFNMjdsS0RZQnpyLUp4R1JHLUNaUnItOHExaXdjZFQzNERKM1NzVUVjem5hYXNkN0RCV1I2dFdNVHBjT0tHbXpIMURXc01GdE9HZ21obzMySFZpckk0Ym5hVnNHUzR0Q2M5SzBNQ2tHSURYbUdwbHEyWVlDUjl3emd3REFESHp6djZEQjRqVFByUFRTN0RkSWdIRVRZc1lzdEVZQ1BHc1c0bkpzUlQ2bWVRQV9wYXU2NldWZGZhMmo0dDJSaU5hYUpoWjkzaUFKQkx2V0VzbDhmYWcydnd2MXpWR0t0NTUyNG9wY0g4SWxBSGk4dEF4WnBLaTYyVy1zQ2l4STV5dEYxSkJXMjVMVVNnOUFmd2lRUVdUTmlPVnZ5STlwMXVfTF9PYjNhMmV3VDJ2NWFPR2NYRnVldGVUYU1HTkEtWXdXazJJNGV0LVNLZUJOSGpIeWdRcVBhRk1Fbm53M0ZkX3ZaR1BTVk9wU1NGX013SE9uNWpYV0tJQVd3Z2NsZC1hYlRsdGpPN3V2U3FwRlo0MUR2Sm5FTGgtUE9URXVCZjRob2llU1ZGUjBHYlQzdlpicl83UTA3TnF3Wk5MckwtTW9DNVgxOHRveWswbXBXZnRFbUl0a3A3LUFscHppV2pnbDlUYWc1cFh5Ujd1dDdaeU4zVTBxNF82Y2dxM2NzM0lGWGFhNEJDUTJScE5XWDA0bXlQVm54TThNMVZMR2hwOExHSDhUZnRYSjVsWmdHbEdKeDVHRzUzYW13eVFqY1k0UEUwdzhkRTZYYzlvUzhpTXc1VUlYbTVPS0JsNlVaWGVXUllmWkFiNUpBUXozZTliRXlfUm5aMnh5UER5aGRPenVhU01fbndGUTJpX3U1dXRQZXpUV3U5XzZVN2tGR0FyRjUtdjVHRHdVbURvTGRBaXNDajR6WkRoWnloRjZBd2lEaWdmU3loZmJ4djRlNFlPNnVtNXRNaTJKWlgzcmwzQTJLNW1Fa0s0ZXVWa3puc2I2bDQyUXlYTVlwWlBrRVJGZlA3ZTFEX1BDNW9JbFJQTGtqbVNSM2hYdXlfQ044UjBQM0p5RGhFeng1WFNGZnFoRkhoV2FyYVY4STlfZ3RJVWR4Mm01V25KWE9KRTFieEtpQTctRVVhbjNIN245QTc2ckQ5UVY2UjZTTU83ZnRIVFFYVENfNWZVSVRlNE45S3VWOWh6SEtJYkI1QjljN0pzVjVHYWJHelFuY1QwS2x0ZUZUbmE3NHNwd2xfSWpvaHpadlcwcHpTZUV6aGlSVWlRa25jYjRnXzNuTzVpblRhUml2Q1llZ2tnc3RlRlFZT2hyOVVsTldJQ0Zoemx1ZmlkdEw1S1RScGQwVS1OME9Qb3l0YUl4UndpMnpPMHVfTGFPVmJNazQwaWVXMTZYVEhPd2l3cHJYY1RYUXNQbVJuQk5PRHVsWm9ISnFneFlOS004WTZwTTBEc3pRNU9PWlY0X2YwZzJYamxydTI4QVdkamNuSFB6NU5IYTdFQzdHak1nVmhNRkNmMkoxRmhZcEYxSlJVanRTZ0Qyc094RlAwQ3pwY25BUmt3LVJEQWYwQjJGdFNJcTVKQUI2cnltYUJKMDA2SU5qYUZMT2x6OHhTMUFEV01HRkYzUGZzbWhvdHZMY0ZYLU44NlplUlZhRGNjNzBnQ3MxcjRRMTl0NVA1c3Y3Z2tKZFM1WUVxZENCNGpjclZGYW5iQ2xVTWpsNVNqMC1nZk5hWDFncjBqWUkxQlVFZ0hmZ1c4cGROOFhlRVRQVmNFN3dsRlVnRGIzRklxRkxxUnAxZGk5RDRkUUZnRXFNbnpQR21CUU9pNC1LbnNqVFNDb2dQaE5PVTlpZ0R0OGZDZEExc3h1RnNtdzBnWktWSTVXTThHM3AwcnRMVVBTV1NDVXMtcmZYTVlNeEtnUW9EaE4yancxX05hZGhuMGxKT2QtWE1yMnZPSWxQeEcwWWc5WThNUXY1T1VSa3pEZldUZ0VCQ01zcFBvUlJnSU1mVWNKd2Nnc095RjVIM25VbnRyMkIyU2E5SUxPSTBFZmlzdXozeGF1NjFza2tMVWNaZ2hPWFUycHdHUUtrNkk2WURCRExVMy1hNVQyT0ZjTTQ4aGlpLVIyVUhaQmhqTWFOQXhEQS1rRVJvTUhaNThuUzAxQjVZY1A2ZHJXRldXdTVPZUE3N3RjdVdHbDFaZUxZMnhxZW5qLUNpVktVWE13N3NJc1JmSExxalNmRllGajNtX2VHWkRxQkNITjhUZDd6WnZ6ODRrZVBfN2lWdzd6Q0Vya2tSMVZENFg1TGhSeUxCZzZMRVJfWUstMlNpcUdJV2EwSmUteWItRkF4alZ1amhrRWRYdWxPa05hcXBUR0pCYjFWZ1hWUVFCbS1jSjVMVFRFR0pRSTlXQzVKU0J1QUpid3NJRTYxdl9GSGdQY251V09BNk9VQ3ZsUDRYVmZQaXRQQ2MtU0FDdHJ4QjlNRjRsb05FaTJoZ2tORnJfbFkycHBfMUFNblE1OXY3anhLcUxlN1FsNU9CWUFNZW80dWl0NFk1Skx2eUhFaG5ybWI5Zm9IM01USXV0WGJhZWdmSVRuY091NDJEQ2E2V0RIcVlPenk1MWsxRU0zRVRWVTVhT21xdXBkMkpUdkZUOXI2V3U2N1ZJQUt0cjN4cWtEYmxQX2RzZFByYy13ZXNQR2lLTHFwdEg3UmdudUNyVVpYSDVESVlQc252cVc4bkZ2UU5VSWtabHRDaHpTd2FLTVk4TmNPcUxxWFNkVFJSUVFpcXlMTENydGlnb0hCeFoxX2F0Q2JJbTZtQTFEeUxfeXFkb1F2cDhBWUlpYWtDUDFPZ3gwVlJ2V2swdlBKTWZGd3RfeGxIbm5Yb2NleFVJbDlUMWVybUdxNFhkOUJYMTlMRXg3VDk0MXU3MzdJTzNNS1kwdnJfT1J2U3FSTmd3X1BPVWJjNVMyVEFuUXg2UE55bFdJaDVZQXpqVkxJRFlRWWR1YkN0NTc5Vy1jeDFENFBrTHdSZTBqalVUbUxobElqSnk0azAtN21FMHN6aQ==)
      flutter: stable
      xcode: latest
      cocoapods: 1.9.3
      ruby: 2.6.6
    scripts:
      - |
        # set up debug keystore
        rm -f ~/.android/debug.keystore
        keytool -genkeypair \
          -alias androiddebugkey \
          -keypass android \
          -keystore ~/.android/debug.keystore \
          -storepass android \
          -dname 'CN=Android Debug,O=Android,C=US' \
          -keyalg 'RSA' \
          -keysize 2048 \
          -validity 10000
      - |
        # set up local properties
        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - cd . && flutter packages pub get
      - cd . && flutter build apk --debug
      - find . -name "Podfile" -execdir pod install \;
      - keychain initialize
      - |
        # set up provisioning profiles
        PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
        mkdir -p "$PROFILES_HOME"
        PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
        echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
        echo "Saved provisioning profile $PROFILE_PATH"
      - |
        # set up signing certificate
        echo $FCI_CERTIFICATE | base64 --decode > /tmp/certificate.p12
        keychain add-certificates --certificate /tmp/certificate.p12
      - cd . && flutter build ios --debug --no-codesign
      - xcode-project use-profiles
      - cd . && xcode-project build-ipa --workspace "ios/Runner.xcworkspace" --scheme
        "Runner"
    artifacts:
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - incfamilysystems@gmail.com
      app_store_connect:
        apple_id: sriveros@colombianadetrasplantes.com
        password: Encrypted(Z0FBQUFBQmYyb2l6cUlncmhWbGN4aEhKM3hFSW5JOC13MUEtWmRKZEZuSE9YNzl2cVVnT3RBNFJUWldSbXVoa3UwLWNpbnZiUjZQeFh6ZkZkVHg1djd0MjgtakFSZ09nbEE9PQ==)
  